package main

import "context"

type SeverityFilter struct {
	Severity
}

func (s *SeverityFilter) Filter(ctx context.Context, vulnerability *Vulnerability) (bool, error) {
	return severityMap[vulnerability.Severity] < severityMap[s.Severity], nil
}

func NewSeverityFilter(severity Severity) *SeverityFilter {
	return &SeverityFilter{Severity: severity}
}

type FixFilter struct {
}

func NewFixFilter() *FixFilter {
	return &FixFilter{}
}

func (c *FixFilter) Filter(ctx context.Context, vulnerability *Vulnerability) (bool, error) {
	for _, reference := range vulnerability.References {
		if commitRegExp.MatchString(reference.URL.String()) {
			return false, nil
		}
	}

	return true, nil
}
